# Reverse Linux VNC for GitHub Actions
# This YAML establishes the "build" workflow where we will execute all required scripts
# During the process, it should get stuck at the last step where it creates a new tunnel on ngrok.

name: Ubuntu

on:
  workflow_dispatch:
    inputs:
      webservice:
        type: choice
        description: Webservice
        options: 
        - novnc
        - cloud9
        - vscode

defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 10240
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
    - uses: actions/checkout@v2
    - run: |
        sudo systemctl stop docker
        mkdir "${GITHUB_WORKSPACE}/docker"
        sudo mv /var/lib/docker "${GITHUB_WORKSPACE}/docker"
        sudo ln -s "${GITHUB_WORKSPACE}/docker" /var/lib/docker
        sudo systemctl start docker
    - name: Preparing environment...
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        VNC_PASSWORD: ${{ secrets.VNC_PASSWORD }}
      # legacy run command script-- run: ./scripts/configure-legacy.sh
      run: ./scripts/configure.sh
    - name: Starting VNC Server...
      env:
        VNC_SCREENSIZE: ${{ secrets.VNC_SCREENSIZE }}
        VNC_DEPTHVALUE: ${{ secrets.VNC_DEPTHVALUE }}
      # legacy run command-- run: cd $HOME && vncserver :1 -geometry $VNC_SCREENSIZE -depth $VNC_DEPTHVALUE -rfbport 7582
      run: export PATH=$PATH:/opt/TurboVNC/bin && cd $HOME && vncserver :1 -geometry $VNC_SCREENSIZE -depth $VNC_DEPTHVALUE -rfbport 7582
    - name: Starting webservice...
      env:
        RUNNER_WEBSERVICE: ${{ github.event.inputs.webservice }}
        VNC_PASSWORD: ${{ secrets.VNC_PASSWORD }}
      run: ./scripts/webservice.sh
    - name: Creating tunnel with ngrok...
      run: ./ngrok start --all --config ./resources/ngrok.yml &
    - name: Ngrok and VNC Configuration
      run: |
        ngrok_url=$(curl --silent http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url' || echo "Error: Unable to retrieve ngrok URL")
        echo "$ngrok_url"
    - name: Holder
      run: sleep 86400  # 24 hours in seconds
